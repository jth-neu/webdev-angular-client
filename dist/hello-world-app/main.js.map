{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin/admin.component.css","webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/course-grid/course-grid.component.css","webpack:///./src/app/course-grid/course-grid.component.html","webpack:///./src/app/course-grid/course-grid.component.ts","webpack:///./src/app/course-navigator/course-navigator.component.css","webpack:///./src/app/course-navigator/course-navigator.component.html","webpack:///./src/app/course-navigator/course-navigator.component.ts","webpack:///./src/app/course-viewer/course-viewer.component.css","webpack:///./src/app/course-viewer/course-viewer.component.html","webpack:///./src/app/course-viewer/course-viewer.component.ts","webpack:///./src/app/hello-world-two/hello-world-two.component.css","webpack:///./src/app/hello-world-two/hello-world-two.component.html","webpack:///./src/app/hello-world-two/hello-world-two.component.ts","webpack:///./src/app/hello-world.component.ts","webpack:///./src/app/lesson-tabs/lesson-tabs.component.css","webpack:///./src/app/lesson-tabs/lesson-tabs.component.html","webpack:///./src/app/lesson-tabs/lesson-tabs.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/models/course.model.client.ts","webpack:///./src/app/module-list/module-list.component.css","webpack:///./src/app/module-list/module-list.component.html","webpack:///./src/app/module-list/module-list.component.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/section-editor/section-editor.component.css","webpack:///./src/app/section-editor/section-editor.component.html","webpack:///./src/app/section-editor/section-editor.component.ts","webpack:///./src/app/section-list/section-list.component.css","webpack:///./src/app/section-list/section-list.component.html","webpack:///./src/app/section-list/section-list.component.ts","webpack:///./src/app/services/course-navigator.service.client.ts","webpack:///./src/app/services/course.service.client.ts","webpack:///./src/app/services/lesson.service.client.ts","webpack:///./src/app/services/module.service.client.ts","webpack:///./src/app/services/section.service.client.ts","webpack:///./src/app/services/user.service.client.ts","webpack:///./src/app/services/widget.service.client.ts","webpack:///./src/app/white-board/white-board.component.css","webpack:///./src/app/white-board/white-board.component.html","webpack:///./src/app/white-board/white-board.component.ts","webpack:///./src/app/widget-list/widget-list.component.css","webpack:///./src/app/widget-list/widget-list.component.html","webpack:///./src/app/widget-list/widget-list.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".btn {\\n  margin: 5px;\\n}\\n\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n\\n  <h1>Admin</h1>\\n  <a class=\\\"btn btn-sm btn-primary\\\" routerLink=\\\"/home\\\">Home</a>\\n  <a class=\\\"btn btn-sm btn-primary\\\" routerLink=\\\"/profile\\\">Profile</a>\\n\\n  <div *ngFor=\\\"let course of courses\\\">\\n    <app-section-editor  [course]=course></app-section-editor>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {CourseServiceClient} from '../services/course.service.client';\nimport {Course} from '../models/course.model.client';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor(private service: CourseServiceClient) { }\n\n  courses: Course[] = [];\n\n  loadPage() {\n    this.service.findAllCourses()\n      .then(courses => this.courses = courses);\n  }\n\n  ngOnInit() {\n    this.loadPage();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HelloWorldComponent } from './hello-world.component';\n\nimport { AppComponent } from './app.component';\nimport { HelloWorldTwoComponent } from './hello-world-two/hello-world-two.component';\nimport {FormsModule} from '@angular/forms';\nimport {CourseNavigatorServiceClient} from './services/course-navigator.service.client';\nimport { CourseNavigatorComponent } from './course-navigator/course-navigator.component';\nimport { WhiteBoardComponent } from './white-board/white-board.component';\nimport {CourseServiceClient} from './services/course.service.client';\nimport { CourseGridComponent } from './course-grid/course-grid.component';\nimport {routing} from './app.routing';\nimport { CourseViewerComponent } from './course-viewer/course-viewer.component';\nimport { ModuleListComponent } from './module-list/module-list.component';\nimport {ModuleServiceClient} from './services/module.service.client';\nimport { LessonTabsComponent } from './lesson-tabs/lesson-tabs.component';\nimport {LessonServiceClient} from './services/lesson.service.client';\nimport { WidgetListComponent } from './widget-list/widget-list.component';\nimport {WidgetServiceClient} from './services/widget.service.client';\nimport { LoginComponent } from './login/login.component';\nimport {UserServiceClient} from './services/user.service.client';\nimport { ProfileComponent } from './profile/profile.component';\nimport {SectionServiceClient} from './services/section.service.client';\nimport { RegisterComponent } from './register/register.component';\nimport { SectionListComponent } from './section-list/section-list.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { SectionEditorComponent } from './section-editor/section-editor.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HelloWorldComponent,\n    HelloWorldTwoComponent,\n    CourseNavigatorComponent,\n    WhiteBoardComponent,\n    CourseGridComponent,\n    CourseViewerComponent,\n    ModuleListComponent,\n    LessonTabsComponent,\n    WidgetListComponent,\n    LoginComponent,\n    ProfileComponent,\n    RegisterComponent,\n    SectionListComponent,\n    AdminComponent,\n    SectionEditorComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    routing\n  ],\n  providers: [\n    CourseNavigatorServiceClient,\n    CourseServiceClient,\n    ModuleServiceClient,\n    LessonServiceClient,\n    WidgetServiceClient,\n    UserServiceClient,\n    SectionServiceClient\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes, RouterModule } from '@angular/router';\nimport { WhiteBoardComponent } from './white-board/white-board.component';\nimport {CourseViewerComponent} from './course-viewer/course-viewer.component';\nimport {LoginComponent} from './login/login.component';\nimport {ProfileComponent} from './profile/profile.component';\nimport {RegisterComponent} from './register/register.component';\nimport {SectionListComponent} from './section-list/section-list.component';\nimport {AdminComponent} from './admin/admin.component';\n\n\nconst appRoutes: Routes = [\n  { path: '', redirectTo: 'home', pathMatch: 'full'},\n  { path: 'home', component: WhiteBoardComponent},\n  { path: 'login', component: LoginComponent},\n  { path: 'profile', component: ProfileComponent},\n  { path: 'register', component: RegisterComponent},\n  { path: 'course/:courseId', component: CourseViewerComponent },\n  { path: 'course/:courseId/module/:moduleId', component: CourseViewerComponent },\n  { path: 'course/:courseId/module/:moduleId/lesson/:lessonId', component: CourseViewerComponent },\n  { path: 'course/:courseId/section', component: SectionListComponent },\n  { path: 'admin', component: AdminComponent },\n  { path: '**', component: WhiteBoardComponent} // last\n];\nexport const routing = RouterModule.forRoot(appRoutes);\n","module.exports = \".btn {\\n  margin: 1px;\\n}\\n\"","module.exports = \"\\n<div class=\\\"nav-buttons\\\" *ngIf=\\\"loggedIn \\\">\\n  <a class=\\\"btn btn-outline-primary btn-sm \\\" routerLink=\\\"/profile\\\">Profile</a>\\n  <a class=\\\"btn btn-outline-danger btn-sm\\\" (click)=\\\"logout()\\\">Logout</a>\\n</div>\\n\\n<div class=\\\"nav-buttons\\\" *ngIf=\\\"!loggedIn \\\">\\n  <a class=\\\"btn btn-outline-primary btn-sm \\\" routerLink=\\\"/login\\\">Login</a>\\n  <a class=\\\"btn btn-outline-primary btn-sm\\\" routerLink=\\\"/register\\\">register</a>\\n</div>\\n\\n<div *ngIf=\\\"loggedIn \\\">\\n  <h2> Enrolled Courses</h2>\\n    <div class=\\\"row\\\">\\n    <div *ngFor=\\\"let course of enrolledCourses\\\" class=\\\"col-sm-3\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n          <h5 class=\\\"card-title\\\">{{course.title}}</h5>\\n          <a routerLink=\\\"/course/{{course.id}}\\\"\\n             class=\\\"btn btn-info\\\">View Course</a>\\n          <br/>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<h2> List of Courses</h2>\\n<div class=\\\"row\\\">\\n  <div *ngFor=\\\"let course of courses\\\" class=\\\"col-sm-3\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body\\\">\\n        <h5 class=\\\"card-title\\\">{{course.title}}</h5>\\n        <a routerLink=\\\"/course/{{course.id}}\\\"\\n           class=\\\"btn btn-info \\\">View Course</a>\\n        <br/>\\n        <a routerLink=\\\"/course/{{course.id}}/section\\\"\\n           class=\\\"btn btn-primary \\\">Enroll</a>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {CourseServiceClient} from '../services/course.service.client';\nimport {Course} from '../models/course.model.client';\nimport {SectionServiceClient} from '../services/section.service.client';\nimport {UserServiceClient } from '../services/user.service.client';\nimport {Router} from '@angular/router';\n\n\n@Component({\n  selector: 'app-course-grid',\n  templateUrl: './course-grid.component.html',\n  styleUrls: ['./course-grid.component.css']\n})\nexport class CourseGridComponent implements OnInit {\n\n  constructor(private courseService: CourseServiceClient,\n              private sectionService: SectionServiceClient,\n              private userService: UserServiceClient,\n              private router: Router) { }\n\n  courses: Course[] = [];\n  loggedIn = false;\n  enrolledCourses: Course[] = [];\n  enrolledCourseIds = [];\n  enrolledSections = [];\n\n  ngOnInit() {\n    this.courseService.findAllCourses()\n      .then(courses => this.courses = courses);\n\n    this.userService.profile()\n      .then(res => {\n        return res._id;\n    })\n      .then((userId) => {\n        if (userId !== null) {\n          this.loggedIn = true;\n          this.sectionService.findSectionsForStudent()\n            .then(sections => {\n              this.enrolledSections = sections;\n              this.findEnrolledCourses();\n            });\n        }\n      });\n  }\n  findEnrolledCourses() {\n    this.enrolledSections.forEach((enrolledSection) => {\n      this.courseService.findCourseById(enrolledSection.section.courseId)\n        .then(course => {\n          const flag = !this.enrolledCourseIds.includes(course.id);\n          if (flag) {\n            this.enrolledCourseIds.push(course.id);\n            this.enrolledCourses.push(course);\n          }\n        });\n    });\n  }\n\n  logout() {\n    this.userService\n      .logout()\n      .then(() =>\n        this.router.navigate(['login']));\n  }\n}\n","module.exports = \".list-group-item.webdev.active {\\n  z-index: 2;\\n  color: #fff;\\n  background-color: #00a8ff;\\n  border-color: #00a8ff;\\n}\\n\"","module.exports = \"<h1>Navigator</h1>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-3\\\">\\n    <ul class=\\\"list-group\\\">\\n      <li class=\\\"list-group-item active\\\">\\n        Courses</li>\\n      <li class=\\\"list-group-item webdev\\\"\\n          *ngFor=\\\"let course of courses\\\"\\n          (click)=\\\"selectCourse(course.id)\\\"\\n          [ngClass]=\\\"{'active': course.id === selectedCourseId}\\\">\\n        {{course.title}}</li>\\n    </ul>\\n  </div>\\n  <div class=\\\"col-3\\\">\\n    <ul class=\\\"list-group\\\">\\n      <li class=\\\"list-group-item active\\\">\\n        Modules </li>\\n      <li class=\\\"list-group-item webdev\\\"\\n          *ngFor=\\\"let module of modules\\\"\\n          (click)=\\\"selectModule(module.id)\\\"\\n          [ngClass]=\\\"{'active': module.id === selectedModuleId}\\\">\\n        {{module.title}} </li>\\n    </ul>\\n  </div>\\n  <div class=\\\"col-3\\\">Lessons</div>\\n  <div class=\\\"col-3\\\">Widgets</div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {CourseNavigatorServiceClient} from '../services/course-navigator.service.client';\n\n@Component({\n  selector: 'app-course-navigator',\n  templateUrl: './course-navigator.component.html',\n  styleUrls: ['./course-navigator.component.css']\n})\nexport class CourseNavigatorComponent implements OnInit {\n\n  constructor(private service:\n                CourseNavigatorServiceClient\n  ) {\n  }\n\n  courses = [];\n  modules = [];\n  selectedCourseId = 0;\n  selectedModuleId = 0;\n\n  ngOnInit() {\n    this.service.findAllCourses()\n      .then(courses => {\n        this.courses = courses;\n      });\n  }\n  selectCourse(courseId) {\n    this.selectedCourseId = courseId;\n    this.service.findModulesForCourse(courseId)\n      .then(modules =>\n        this.modules = modules);\n  }\n  selectModule(moduleId) {\n    this.selectedModuleId = moduleId;\n  }\n\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h2>{{course.title}}</h2>\\n  <app-module-list></app-module-list>\\n  <br/>\\n  <div class=\\\"home-button\\\">\\n    <a class=\\\"btn btn-primary \\\" routerLink=\\\"/home\\\">Home</a>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {CourseServiceClient} from '../services/course.service.client';\nimport {Course} from '../models/course.model.client';\n\n\n@Component({\n  selector: 'app-course-viewer',\n  templateUrl: './course-viewer.component.html',\n  styleUrls: ['./course-viewer.component.css']\n})\nexport class CourseViewerComponent implements OnInit {\n\n  constructor(private service: CourseServiceClient,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(params => this.loadCourse(params['courseId']));\n  }\n\n  course: Course = new Course();\n  loadCourse(courseId) {\n    this.service.findCourseById(courseId)\n      .then(course => this.course = course);\n  }\n\n  ngOnInit() {\n  }\n}\n","module.exports = \"\"","module.exports = \"<h1>{{message}}</h1>\\n<ul>\\n<li *ngFor=\\\"let course of courses\\\">\\n  {{course.title}}\\n  <button (click)=\\\"deleteCourse(course.id)\\\"\\n          class=\\\"btn btn-danger\\\">\\n    Delete\\n  </button>\\n</li>\\n</ul>\\n<input [(ngModel)]=\\\"courseTitle\\\"\\n       class=\\\"form-control\\\"/>\\n<button\\n  class=\\\"btn btn-success\\\"\\n  (click)=\\\"addCourse(courseTitle)\\\">\\n  Add Course\\n</button>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-hello-world-two',\n  templateUrl: './hello-world-two.component.html',\n  styleUrls: ['./hello-world-two.component.css']\n})\nexport class HelloWorldTwoComponent implements OnInit {\n\n  message = 'Hello World Component';\n\n  courseTitle: string;\n  courses = [\n    {title: 'CS5200', id: 123},\n    {title: 'CS5610', id: 234},\n    {title: 'CS3200', id: 345},\n    {title: 'CS4550', id: 456}\n  ];\n\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n\n  deleteCourse(courseId) {\n    this.courses =\n      this.courses\n        .filter(course =>\n          course.id !== courseId);\n  }\n  addCourse(courseTitle) {\n    const largestId = Math.max.apply(\n      Math, this.courses.map(\n        function(course) {\n          return course.id; }));\n    this.courses.push(\n      {title: courseTitle, id: largestId + 1}\n    );\n    this.courseTitle = '';\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'hello-world',\n  template: '<h1>Hello World</h1>'\n})\n\nexport class HelloWorldComponent { }\n","module.exports = \"\"","module.exports = \"<ul class=\\\"nav nav-tabs\\\">\\n  <li *ngFor=\\\"let lesson of lessons\\\"\\n      class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link\\\"\\n       [ngClass]=\\\"{'active': lesson.id == lessonId}\\\"\\n       routerLink=\\\"/course/{{courseId}}/module/{{moduleId}}/lesson/{{lesson.id}}\\\">\\n      {{lesson.title}}\\n    </a>\\n  </li>\\n</ul>\\n\\n<app-widget-list></app-widget-list>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {LessonServiceClient} from '../services/lesson.service.client';\n\n@Component ({\n  selector: 'app-lesson-tabs',\n  templateUrl: './lesson-tabs.component.html',\n  styleUrls: ['./lesson-tabs.component.css']\n})\nexport class LessonTabsComponent implements OnInit {\n\n  constructor(private service: LessonServiceClient,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(\n      params => this.setParams(params));\n  }\n\n  courseId;\n  moduleId;\n  lessonId;\n  lessons = [];\n\n  setParams(params) {\n    this.courseId = params['courseId'];\n    this.moduleId = params['moduleId'];\n    this.lessonId = params['lessonId'];\n    this.loadLessons(this.moduleId);\n  }\n\n  loadLessons(moduleId) {\n    this.moduleId = moduleId;\n    this.service.findLessonsForModule(moduleId)\n      .then(lessons => this.lessons = lessons);\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".btn {\\n  margin: 1px;\\n}\\n\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Login</h1>\\n\\n  <input [(ngModel)]=\\\"username\\\"\\n         placeholder=\\\"username\\\"\\n         class=\\\"form-control\\\"/>\\n  <input [(ngModel)]=\\\"password\\\"\\n         placeholder=\\\"password\\\"\\n         type=\\\"password\\\"\\n         class=\\\"form-control\\\"/>\\n  <button (click)=\\\"login(username, password)\\\"\\n          class=\\\"btn btn-primary btn-block\\\">\\n    Login\\n  </button>\\n\\n  <a class=\\\"btn btn-sm btn-primary\\\" routerLink=\\\"/register\\\">Register</a>\\n  <a class=\\\"btn btn-sm btn-primary float-right\\\" routerLink=\\\"/home\\\">Home</a>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Route, Router} from '@angular/router';\nimport {UserServiceClient} from '../services/user.service.client';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  username;\n  password;\n  login(username, password) {\n    if (username === undefined || password === undefined) {\n      alert('Username and password can not be empty.');\n    } else {\n      this.service\n        .login(username, password)\n        .then((user) => {\n          if (user === null) {\n            alert('Invalid username or password, please try again.');\n          } else {\n            this.router.navigate(['profile']);\n          }\n        });\n    }\n  }\n\n  constructor(private router: Router,\n              private service: UserServiceClient) { }\n\n  ngOnInit() {\n  }\n\n}\n","export class Course {\n  id: number;\n  title: string;\n  courseType: string;\n}\n","module.exports = \".active.wbdv {\\n  background-color: red;\\n  border-color: red;\\n}\\n\\n.active.wbdv a {\\n  color: white;\\n}\\n\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-4\\\">\\n    <ul class=\\\"list-group\\\">\\n      <li class=\\\"list-group-item active\\\">Modules</li>\\n      <li [ngClass]=\\\"{'active': module.id == moduleId}\\\" *ngFor=\\\"let module of modules\\\"\\n          class=\\\"list-group-item wbdv\\\">\\n        <a routerLink=\\\"/course/{{courseId}}/module/{{module.id}}\\\">\\n          {{module.title}}</a>\\n      </li>\\n    </ul>\\n  </div>\\n  <div class=\\\"col-8\\\">\\n    <app-lesson-tabs></app-lesson-tabs>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {ModuleServiceClient} from '../services/module.service.client';\n\n@Component({\n  selector: 'app-module-list',\n  templateUrl: './module-list.component.html',\n  styleUrls: ['./module-list.component.css']\n})\nexport class ModuleListComponent implements OnInit {\n\n  constructor(private service: ModuleServiceClient,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(\n      params => this.setParams(params));\n  }\n\n  courseId;\n  moduleId;\n  modules = [];\n\n  setParams(params) {\n    this.courseId = params['courseId'];\n    this.moduleId = params['moduleId'];\n    this.loadModules(this.courseId);\n  }\n\n  loadModules(courseId) {\n    this.courseId = courseId;\n    this.service.findModulesForCourse(courseId)\n      .then(modules => this.modules = modules);\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".btn {\\n  margin: 1px;\\n}\\n\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Profile</h1>\\n\\n  <input [(ngModel)]=\\\"username\\\"\\n         placeholder=\\\"username\\\"\\n         class=\\\"form-control\\\"/>\\n  <input [(ngModel)]=\\\"firstName\\\"\\n         placeholder=\\\"first name\\\"\\n         class=\\\"form-control\\\"/>\\n  <input [(ngModel)]=\\\"lastName\\\"\\n         placeholder=\\\"lastName\\\"\\n         class=\\\"form-control\\\"/>\\n  <input [(ngModel)]=\\\"email\\\"\\n         placeholder=\\\"email\\\"\\n         class=\\\"form-control\\\"/>\\n  <input [(ngModel)]=\\\"phone\\\"\\n         placeholder=\\\"phone\\\"\\n         class=\\\"form-control\\\"/>\\n  <input [(ngModel)]=\\\"address\\\"\\n         placeholder=\\\"address\\\"\\n         class=\\\"form-control\\\"/>\\n\\n  <button (click)=\\\"update()\\\"\\n          class=\\\"btn btn-primary btn-block\\\">\\n    Update\\n  </button>\\n\\n  <h2>Sections ({{sections.length}})</h2>\\n\\n  <ul class=\\\"list-group\\\">\\n    <li *ngFor=\\\"let enrollment of sections\\\" class=\\\"list-group-item\\\">\\n      <span class=\\\"font-weight-bold\\\">Name:</span> {{enrollment.section.name}}\\n      <span class=\\\"font-weight-bold\\\">Available Seats:</span> {{enrollment.section.seats}}\\n      <button (click)=\\\"withdraw(enrollment)\\\"\\n              class=\\\"float-right btn btn-danger\\\">Withdraw</button>\\n      <button (click)=\\\"toSectionPage(enrollment)\\\"\\n              class=\\\"float-right btn btn-primary\\\">Sections</button>\\n    </li>\\n  </ul>\\n\\n  <a class=\\\"btn btn-sm btn-primary\\\" routerLink=\\\"/home\\\">Home</a>\\n  <a class=\\\"btn btn-sm btn-outline-primary\\\" *ngIf=\\\"username === 'admin'\\\" routerLink=\\\"/admin\\\">Admin</a>\\n  <a class=\\\"btn btn-sm btn-danger float-right\\\" (click)=\\\"logout()\\\">Logout</a>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {User} from '../models/user.model.client';\nimport {UserServiceClient} from '../services/user.service.client';\nimport {Router} from '@angular/router';\nimport {SectionServiceClient} from '../services/section.service.client';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor(private service: UserServiceClient,\n              private sectionService: SectionServiceClient,\n              private router: Router) { }\n\n  user = {};\n  username;\n  firstName;\n  lastName;\n  email;\n  phone;\n  address;\n  sections = [];\n\n  update() {\n    const user = {\n      username : this.username,\n      firstName : this.firstName,\n      lastName: this.lastName,\n      email: this.email,\n      phone: this.phone,\n      address: this.address\n    };\n    this.service.update(user);\n  }\n\n  logout() {\n    this.service\n      .logout()\n      .then(() =>\n        this.router.navigate(['login']));\n\n  }\n  loadSections() {\n    this.sectionService\n      .findSectionsForStudent()\n      .then(sections => this.sections = sections );\n  }\n\n  ngOnInit() {\n    this.service\n      .profile()\n      .then((user) => {\n          this.username = user.username;\n          this.firstName = user.firstName;\n            this.lastName = user.lastName;\n            this.email = user.email;\n          this.phone = user.phone;\n          this.address = user.address;\n        }\n      );\n    this.loadSections();\n  }\n  withdraw(enrollment) {\n    this.sectionService\n      .withdrawStudentFromSection(enrollment.section._id)\n      .then(() => this.loadSections());\n  }\n  toSectionPage(enrollment) {\n    this.router.navigate(['course/' + enrollment.section.courseId + '/section']);\n  }\n}\n","module.exports = \".btn {\\n  margin: 1px;\\n}\\n\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Register</h1>\\n\\n  <input [(ngModel)]=\\\"username\\\"\\n         placeholder=\\\"username\\\"\\n         class=\\\"form-control\\\"/>\\n  <input [(ngModel)]=\\\"password\\\"\\n         placeholder=\\\"password\\\"\\n         type=\\\"password\\\"\\n         class=\\\"form-control\\\"/>\\n  <input [(ngModel)]=\\\"password2\\\"\\n         placeholder=\\\"verify password\\\"\\n         type=\\\"password\\\"\\n         class=\\\"form-control\\\"/>\\n  <button (click)=\\\"register(username, password, password2)\\\"\\n          class=\\\"btn btn-primary btn-block\\\">\\n    Register\\n  </button>\\n\\n  <a class=\\\"btn btn-sm btn-primary\\\" routerLink=\\\"/login\\\">Login</a>\\n  <a class=\\\"btn btn-sm btn-primary float-right\\\" routerLink=\\\"/home\\\">Home</a>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport {UserServiceClient} from '../services/user.service.client';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(private router: Router,\n              private service: UserServiceClient) { }\n\n  username;\n  password;\n  password2;\n  register(username, password, password2) {\n    if (password !== password2) {\n      alert('The passwords don\\'t match.');\n    } else {\n      this.service.findUserByUsername(username)\n        .then((user) => {\n          if (user !== null) {\n            alert('Username already exists.');\n          } else {\n            this.service\n              .createUser(username, password)\n              .then(() =>\n                this.router.navigate(['profile']));\n          }\n        });\n    }\n  }\n\n  ngOnInit() {\n  }\n}\n","module.exports = \".btn {\\n  margin: 5px;\\n}\\n\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h3>{{course.title}}</h3>\\n  <input [(ngModel)]=\\\"sectionName\\\"\\n         placeholder=\\\"{{course.title}} Section {{sections.length + 1}}\\\"\\n         class=\\\"form-control\\\">\\n  <input [(ngModel)]=\\\"seats\\\"\\n         placeholder=\\\"Seats available\\\"\\n         class=\\\"form-control\\\">\\n  <input [(ngModel)]=\\\"seatsMax\\\"\\n         placeholder=\\\"Max Seats\\\"\\n         class=\\\"form-control\\\">\\n  <button (click)=\\\"createSection(sectionName, seats, seatsMax)\\\" class=\\\"btn btn-success btn-block\\\">\\n    Add Section\\n  </button>\\n\\n  <h4 *ngIf=\\\"sections.length != 0\\\">Current Sections</h4>\\n  <ul class=\\\"list-group\\\">\\n    <li *ngFor=\\\"let section of sections\\\" class=\\\"list-group-item\\\">\\n      <span class=\\\"font-weight-bold\\\">Name:</span>\\n      <input [(ngModel)]=\\\"updateSectionName\\\"\\n             placeholder=\\\"{{section.name}}\\\"\\n             class=\\\"form-control\\\">\\n      <span class=\\\"font-weight-bold\\\">Available Seats:</span>\\n      <input [(ngModel)]=\\\"updateSeats\\\"\\n             placeholder=\\\"{{section.seats}}\\\"\\n             class=\\\"form-control\\\">\\n      <span class=\\\"font-weight-bold\\\">Max Seats:</span>\\n      <input [(ngModel)]=\\\"updateSeatsMax\\\"\\n             placeholder=\\\"{{section.seatsMax}}\\\"\\n             class=\\\"form-control\\\">\\n      <button (click)=\\\"deleteSection(section)\\\"\\n              class=\\\"float-right btn btn-danger\\\">Remove Section</button>\\n      <button (click)=\\\"update(section,updateSectionName,updateSeats,updateSeatsMax)\\\"\\n              class=\\\"btn btn-primary \\\">\\n        Update\\n      </button>\\n    </li>\\n  </ul>\\n  <hr>\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport {SectionServiceClient} from '../services/section.service.client';\n\n@Component({\n  selector: 'app-section-editor',\n  templateUrl: './section-editor.component.html',\n  styleUrls: ['./section-editor.component.css']\n})\nexport class SectionEditorComponent implements OnInit {\n\n  constructor(private service: SectionServiceClient) {\n  }\n\n  @Input() course;\n  courseId: number;\n  sections = [];\n  sectionName = '';\n  seats = '';\n  seatsMax = '';\n  updateSectionName = '';\n  updateSeats = '';\n  updateSeatsMax = '';\n  loadSections(courseId) {\n    this.courseId = courseId;\n    this\n      .service\n      .findSectionsForCourse(courseId)\n      .then(sections => this.sections = sections);\n  }\n\n  deleteSection(section) {\n    this.service.deleteSection(section._id)\n      .then(() => this.loadSections(this.courseId));\n  }\n\n  createSection(sectionName, seats, seatsMax) {\n    if (sectionName === '') {\n      sectionName = this.course.title + ' Section ' + (this.sections.length + 1);\n    }\n    if (seats === '') {\n      seats = 0;\n    }\n    if (seatsMax === '') {\n      seatsMax = 50;\n    }\n    this.service.createSection(this.courseId, sectionName, seats, seatsMax)\n      .then(() => this.loadSections(this.courseId))\n      .then(() => {\n        this.sectionName = '';\n        this.seats = '';\n        this.seatsMax = ''; });\n  }\n\n  ngOnInit() {\n    this.courseId = this.course.id;\n    this.loadSections(this.courseId);\n  }\n\n  update(section, newName, newSeat, newMax) {\n    this.service.update(section._id, newName, newSeat, newMax)\n      .then(() => this.loadSections(this.courseId))\n      .then(() => {\n        this.sectionName = '';\n        this.seats = '';\n        this.seatsMax = ''; });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Sections for course: {{course.title}}</h1>\\n\\n  <ul class=\\\"list-group\\\">\\n    <li *ngFor=\\\"let section of sections\\\" class=\\\"list-group-item\\\">\\n      <div class=\\\"font-weight-bold\\\">Name:</div>{{section.name}}\\n      <div class=\\\"font-weight-bold\\\">Available Seats:</div>{{section.seats}}\\n      <div class=\\\"font-weight-bold\\\">Max Seats:</div>{{section.seatsMax}}\\n      <button (click)=\\\"enroll(section)\\\"\\n              class=\\\"float-right btn btn-primary\\\"\\n              [disabled] =\\\"!loggedIn || section.seats === 0\\\"\\n      >Enroll</button>\\n    </li>\\n  </ul>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {SectionServiceClient} from '../services/section.service.client';\nimport {CourseServiceClient} from '../services/course.service.client';\nimport {UserServiceClient} from '../services/user.service.client';\n\n@Component({\n  selector: 'app-section-list',\n  templateUrl: './section-list.component.html',\n  styleUrls: ['./section-list.component.css']\n})\nexport class SectionListComponent implements OnInit {\n\n  constructor(private service: SectionServiceClient,\n              private courseService: CourseServiceClient,\n              private userService: UserServiceClient,\n              private router: Router,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(params => this.loadSections(params['courseId']));\n  }\n  seats = '';\n  courseId = '';\n  sections = [];\n  course;\n  loggedIn = false;\n  loadSections(courseId) {\n    this.courseId = courseId;\n    this\n      .service\n      .findSectionsForCourse(courseId)\n      .then(sections => this.sections = sections);\n  }\n  enroll(section) {\n    this.service\n      .enrollStudentInSection(section._id)\n      .then(() => {\n        this.router.navigate(['profile']);\n      });\n  }\n\n  ngOnInit() {\n    this.courseService.findCourseById(this.courseId)\n      .then((course) => {\n        this.course = course;\n      });\n    this.userService.profile()\n      .then(res => {\n        return res._id;\n      })\n      .then((userId) => {\n        if (userId !== null) {\n          this.loggedIn = true;\n        }\n      });\n  }\n}\n","export class CourseNavigatorServiceClient {\n  findAllCourses() {\n    return fetch\n    ('https://webdev-summer2018-jthuang.herokuapp.com/api/course')\n      .then(response => response.json());\n  }\n\n  findModulesForCourse(courseId) {\n    return fetch\n    ('https://webdev-summer2018-jthuang.herokuapp.com/api/course/'\n      + courseId + '/module')\n      .then(response => response.json());\n  }\n\n}\n","export class CourseServiceClient {\n  COURSE_URL = 'https://webdev-summer2018-jthuang.herokuapp.com/api/course';\n\n  findAllCourses() {\n    return fetch(this.COURSE_URL)\n      .then(response => response.json());\n  }\n\n  findCourseById(courseId) {\n    return fetch(this.COURSE_URL + '/' + courseId)\n      .then(response => response.json());\n  }\n\n  updateCourse(course) {\n    return fetch(this.COURSE_URL, {\n      method: 'post',\n      body: JSON.stringify(course),\n      headers: {\n        'content-type': 'application/json'\n      }\n    })\n      .then(response => {\n        return response.json();\n      });\n  }\n}\n","export class LessonServiceClient {\n  findLessonsForModule(moduleId) {\n    return fetch('https://webdev-summer2018-jthuang.herokuapp.com/api/module/' + moduleId + '/lesson')\n      .then(response => response.json());\n  }\n}\n","export class ModuleServiceClient {\n  MODULE_URL = 'https://webdev-summer2018-jthuang.herokuapp.com/api/course/COURSE_ID/module';\n  findModulesForCourse(courseId) {\n    return fetch(this.MODULE_URL.replace('COURSE_ID', courseId))\n      .then(response => response.json());\n  }\n}\n","export class SectionServiceClient {\n\n  SECTION_URL = 'https://mighty-badlands-90546.herokuapp.com/api/course/COURSEID/section';\n\n  findSectionsForStudent() {\n    const url = 'https://mighty-badlands-90546.herokuapp.com/api/student/section';\n    return fetch(url, {\n      credentials: 'include'\n    })\n      .then(response => response.json());\n  }\n\n  enrollStudentInSection(sectionId) {\n    const url = 'https://mighty-badlands-90546.herokuapp.com/api/section/' + sectionId + '/enrollment';\n    return fetch(url, {\n      method: 'post',\n      credentials: 'include'\n    });\n  }\n  withdrawStudentFromSection(sectionId) {\n    const url = 'https://mighty-badlands-90546.herokuapp.com/api/section/' + sectionId + '/withdraw';\n    return fetch(url, {\n      method: 'delete',\n      credentials: 'include'\n    });\n  }\n\n  findSectionsForCourse(courseId) {\n    return fetch(this.SECTION_URL.replace('COURSEID', courseId))\n      .then(response => response.json());\n  }\n\n  createSection(courseId, name, seats, seatsMax) {\n    const section = {courseId, name, seats, seatsMax};\n    return fetch(this.SECTION_URL.replace('COURSEID', courseId), {\n      method: 'post',\n      body: JSON.stringify(section),\n      credentials: 'include',\n      headers: {\n        'content-type': 'application/json'\n      }\n    });\n  }\n\n  deleteSection(sectionId) {\n    return fetch('https://mighty-badlands-90546.herokuapp.com/api/section' + '/' + sectionId, {\n      method: 'delete'\n    });\n  }\n\n  update(sectionId, newName, newSeats, newMax) {\n    const section = {id: sectionId, name: newName, seats: newSeats , seatsMax: newMax};\n    return fetch('https://mighty-badlands-90546.herokuapp.com/api/section' + '/' + sectionId, {\n      method: 'put',\n      body: JSON.stringify(section),\n      credentials: 'include',\n      headers: {\n        'content-type': 'application/json'\n      }\n    });\n  }\n}\n","export class UserServiceClient {\n\n  findUserById(userId) {\n    return fetch('https://mighty-badlands-90546.herokuapp.com/api/user/' + userId)\n      .then(response => response.json());\n  }\n\n  login(username, password) {\n    const credentials = {\n      username: username,\n      password: password\n    };\n    return fetch('https://mighty-badlands-90546.herokuapp.com/api/login', {\n      method: 'post',\n      body: JSON.stringify(credentials),\n      credentials: 'include',\n      headers: {\n        'content-type': 'application/json'\n      }\n    })\n      .then(response => response.json());\n  }\n\n  logout() {\n    return fetch('https://mighty-badlands-90546.herokuapp.com/api/logout', {\n      method: 'post',\n      credentials: 'include'\n    });\n  }\n\n  profile() {\n    return fetch('https://mighty-badlands-90546.herokuapp.com/api/profile',\n      {\n        credentials: 'include', // include, same-origin, *omit\n      })\n      .then(response => response.json());\n  }\n\n  createUser(username, password) {\n    const user = {\n      username: username,\n      password: password\n    };\n    return fetch('https://mighty-badlands-90546.herokuapp.com/api/register', {\n      body: JSON.stringify(user),\n      credentials: 'include', // include, same-origin, *omit\n      method: 'post',\n      headers: {\n        'content-type': 'application/json'\n      }\n    });\n  }\n\n  update(user) {\n    return fetch('https://mighty-badlands-90546.herokuapp.com/api/user', {\n      method: 'put',\n      body: JSON.stringify(user),\n      credentials: 'include',\n      headers: {\n        'content-type': 'application/json'\n      }\n    });\n  }\n  findUserByUsername(username) {\n    return fetch('https://mighty-badlands-90546.herokuapp.com/api/user/' + username + '/username')\n      .then(response => response.json());\n  }\n}\n","export class WidgetServiceClient {\n  findWidgetsForLesson(lessonId) {\n    return fetch('https://webdev-summer2018-jthuang.herokuapp.com/api/lesson/' + lessonId + '/widget')\n      .then(response => response.json());\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>White Board</h1>\\n  <app-course-grid></app-course-grid>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-white-board',\n  templateUrl: './white-board.component.html',\n  styleUrls: ['./white-board.component.css']\n})\nexport class WhiteBoardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div *ngFor=\\\"let widget of widgets\\\">\\n  <div [ngSwitch]=\\\"widget.widgetType\\\">\\n    <div *ngSwitchCase=\\\"'Heading'\\\">\\n      <div [ngSwitch]=\\\"widget.size\\\">\\n        <h1 *ngSwitchCase=\\\"'1'\\\">{{widget.text}}</h1>\\n        <h2 *ngSwitchCase=\\\"'2'\\\">{{widget.text}}</h2>\\n        <h3 *ngSwitchCase=\\\"'3'\\\">{{widget.text}}</h3>\\n        <h4 *ngSwitchCase=\\\"'4'\\\">{{widget.text}}</h4>\\n        <h5 *ngSwitchCase=\\\"'5'\\\">{{widget.text}}</h5>\\n        <h6 *ngSwitchCase=\\\"'6'\\\">{{widget.text}}</h6>\\n      </div>\\n    </div>\\n    <div *ngSwitchCase=\\\"'Link'\\\">\\n      <a href=\\\"{{widget.href}}\\\">{{widget.text}}</a>\\n    </div>\\n    <div *ngSwitchCase=\\\"'List'\\\">\\n      <div [ngSwitch]=\\\"widget.listType\\\">\\n        <div *ngSwitchCase=\\\"'unordered'\\\">\\n          <ul class=\\\"list-group\\\">\\n            <li class=\\\"list-group-item\\\"\\n                *ngFor=\\\"let item of widget.text.split('\\\\n')\\\">\\n              {{item}}\\n            </li>\\n          </ul>\\n        </div>\\n        <div *ngSwitchCase=\\\"'ordered'\\\">\\n          <ol >\\n            <li\\n              *ngFor=\\\"let item of widget.text.split('\\\\n')\\\">\\n              {{item}}\\n            </li>\\n          </ol>\\n        </div>\\n      </div>\\n    </div>\\n    <div *ngSwitchCase=\\\"'Paragraph'\\\">\\n      <p>{{widget.text}}</p>\\n    </div>\\n    <div *ngSwitchCase=\\\"'Image'\\\">\\n      <img src={{widget.src}} class=\\\"image-preview\\\" alt=\\\"preview image\\\" />\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {WidgetServiceClient} from '../services/widget.service.client';\n\n@Component({\n  selector: 'app-widget-list',\n  templateUrl: './widget-list.component.html',\n  styleUrls: ['./widget-list.component.css']\n})\nexport class WidgetListComponent implements OnInit {\n\n  constructor(private service: WidgetServiceClient,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(params => this.setContext(params));\n  }\n\n  context;\n  widgets = [];\n  setContext(params) {\n    this.context = params;\n    this.loadWidgets(params.lessonId);\n  }\n  loadWidgets(lessonId) {\n    this.service.findWidgetsForLesson(lessonId)\n      .then(widgets => this.widgets = widgets);\n  }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}